===
infix op functional expression not parsed as such
===
x = 1 + 2
---
(unison
    (term_declaration
        (term_definition
            (wordy_id)
            (kw_equals)
            (function_application
                (nat)
                (operator)
                (nat)))))
===
[Regression] Issue 21: built-in hash without path not parsed correctly
===
x = ##Foo
---
(unison (term_declaration (term_definition (wordy_id) (kw_equals) (built_in_hash (wordy_id)))))
===
[Regression] issue 24: multiline text literal with an unescaped double quotation mark
===
> """ foo " bar """
---
(unison (watch_expression (literal_text)))
===
[Regression] Issue 30, infix ops with path in function application
===
> 1 Nat.+ 2
---
(unison (watch_expression (function_application (nat) (path) (operator) (nat))))===
[Regression] #34 - watch expressions can be binds (term definitions, but types are not allowed as per TermParser.hs, so not term declarations)
They cannot be destructuring binds, which cannot happen at the top level. Verified via Unison LSP.
===
> z = 5
---
(unison 
    (watch_expression 
        (term_definition 
            (wordy_id) (kw_equals) (nat))))